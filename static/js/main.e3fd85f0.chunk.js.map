{"version":3,"sources":["reducers/tracks.js","actions/types.js","reducers/search.js","reducers/player.js","reducers/index.js","store/index.js","actions/index.js","components/TrackImage.js","components/Track.js","components/Tracklist.js","components/TimeProgressSlider.js","components/VolumeControl.js","helperFunctions.js","components/TrackDuration.js","components/TrackCurrentTime.js","components/TrackTitle.js","components/PlayBtn.js","components/NextBtn.js","components/PrevBtn.js","components/FullPlayerOpenBtn.js","components/Player.js","components/FullPlayerCloseBtn.js","components/VolumeControlFull.js","components/Playlist.js","components/FullPlayer.js","components/Search.js","components/Audio.js","App.js","serviceWorker.js","index.js"],"names":["combineReducers","byID","state","arguments","length","undefined","action","type","tracks","forEach","track","id","allIDs","Object","toConsumableArray","map","inPlaylist","results","paused","currentTime","time","volume","timeSliderCaptured","fullPlayerOpen","getTrackDuration","player","duration","getTrackTitle","concat","artist_name","name","getTrackImage","album_image","reducers","search","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","apiRoot","receiveTracks","playTrack","dispatch","getState","console","log","selectTrack","nextTrack","nextTrackIndex","playlist","currentTrackIndex","indexOf","setCurrentTime","setVolume","style","width","height","display","TrackImage","react_default","a","createElement","src","this","props","Component","connect","Track","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","_this$props","selected","stopTrack","_this$props2","className","title","onClick","index_es","icon","faPlay","faPause","isPaused","_ref","_ref2","Tracklist","fetchTracks","components_Track","key","params","queryParams","param","client_id","limit","order","url","fetch","then","response","json","data","TimeProgressSlider","progress","handleMouseDown","handleMouseUp","handleMouseMove","e","clientRect","currentTarget","getBoundingClientRect","part","clientX","left","addEventListener","captureSlider","setState","durationPart","removeEventListener","Math","round","releaseSlider","sliderCaptured","large","timeProgress","progressSliderStyle","padding","fillerStyle","handlerStyle","opacity","onMouseDown","VolumeControl","isOpen","handleFocus","handleBlur","handleVolumeMute","handleVolumeUp","clientY","top","onFocus","onBlur","faVolumeUp","faVolumeMute","getVolumeIcon","faVolumeDown","getTimeString","seconds","minutes","parseInt","TrackDuration","TrackCurrentTime","PlayBtn","play","pause","size","NextBtn","next","faStepForward","PrevBtn","previous","faStepBackward","prevTrackIndex","FullPlayerOpenBtn","open","faCaretUp","Player","components_FullPlayerOpenBtn","TrackTitle","components_TrackCurrentTime","components_TrackDuration","components_TimeProgressSlider","components_PrevBtn","components_PlayBtn","components_NextBtn","components_VolumeControl","FullPlayerCloseBtn","close","faCaretDown","VolumeControlFull","Playlist","FullPlayer","components_FullPlayerCloseBtn","components_Playlist","components_TrackImage","components_VolumeControlFull","Search","value","handleChange","target","searchFor","onChange","findTracksByName","Audio","audioRef","React","createRef","handleTimeUpdate","floor","current","prevProps","audio","ref","onEnded","onTimeUpdate","AppStyle","justifyContent","marginBottom","titleStyle","textAlign","color","App","react","components_Search","components_Tracklist","components_Player","components_FullPlayer","components_Audio","Boolean","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3fd85f0.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nimport * as types from '../actions/types';\r\n\r\nconst byID = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.RECEIVE_TRACKS:\r\n      const tracks = {}\r\n      action.tracks.forEach(track => tracks[track.id] = track);\r\n      return tracks;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst allIDs = (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.RECEIVE_TRACKS:\r\n      return [\r\n        ...action.tracks.map(track => track.id)\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst inPlaylist = (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.ADD_TRACKS_TO_PLAYLIST:\r\n      return action.tracks;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  byID,\r\n  allIDs,\r\n  inPlaylist\r\n});","\r\nexport const RECEIVE_TRACKS = 'RECEIVE_TRACKS';\r\nexport const REMOVE_TRACKS = 'REMOVE_TRACKS';\r\n\r\nexport const UPDATE_RESULTS = 'UPDATE_RESULTS';\r\n\r\nexport const ADD_TRACKS_TO_PLAYLIST = 'ADD_TRACKS_TO_PLAYLIST';\r\n\r\nexport const SELECT_TRACK = 'SELECT_TRACK';\r\nexport const SET_ON_PAUSE = 'SET_ON_PAUSE';\r\nexport const SET_ON_PLAY = 'SET_ON_PLAY';\r\nexport const SET_CURRENT_TIME = 'SET_CURRENT_TIME';\r\nexport const SET_VOLUME = 'SET_VOLUME';\r\n\r\nexport const CAPTURE_TIME_SLIDER = 'CAPTURE_TIME_SLIDER';\r\nexport const RELEASE_TIME_SLIDER = 'RELEASE_TIME_SLIDER';\r\n\r\nexport const OPEN_FULL_PLAYER = 'OPEN_FULL_PLAYER';\r\nexport const CLOSE_FULL_PLAYER = 'CLOSE_FULL_PLAYER';\r\n","import { combineReducers } from 'redux';\r\n\r\nimport * as types from '../actions/types';\r\n\r\nconst results = (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.UPDATE_RESULTS:\r\n      return [\r\n        ...action.tracks.map(track => track.id)\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  results\r\n});","import { combineReducers } from 'redux';\r\n\r\nimport * as types from '../actions/types';\r\n\r\nconst track = (state = '', action) => {\r\n  if (action.type === types.SELECT_TRACK) {\r\n    return action.id;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst paused = (state = true, action) => {\r\n  if (action.type === types.SET_ON_PAUSE) {\r\n    return true;\r\n  } else if (action.type === types.SET_ON_PLAY) {\r\n    return false;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst currentTime = (state = 0, action) => {\r\n  if (action.type === types.SET_CURRENT_TIME) {\r\n    return action.time;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst volume = (state = 1, action) => {\r\n  if (action.type === types.SET_VOLUME) {\r\n    return action.volume;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst timeSliderCaptured = (state = false, action) => {\r\n  if (action.type === types.CAPTURE_TIME_SLIDER) {\r\n    return true;\r\n  } else if (action.type === types.RELEASE_TIME_SLIDER) {\r\n    return false;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst fullPlayerOpen = (state = false, action) => {\r\n  if (action.type === types.OPEN_FULL_PLAYER) {\r\n    return true;\r\n  } else if (action.type === types.CLOSE_FULL_PLAYER) {\r\n    return false;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default combineReducers({\r\n  track,\r\n  paused,\r\n  currentTime,\r\n  volume,\r\n  timeSliderCaptured,\r\n  fullPlayerOpen\r\n});","import { combineReducers } from 'redux';\r\n\r\nimport tracks from './tracks';\r\nimport search from './search';\r\nimport player from './player';\r\n\r\n// import * as types from '../actions/types';\r\n\r\n/*\r\n  const initState = {\r\n    tracks: {\r\n      byID: {},\r\n      allIDs: [],\r\n      inPlaylist: []\r\n    },\r\n    search: {\r\n      value: '',\r\n      results: [],\r\n      next: ''\r\n    },\r\n    player: {\r\n      track: '',\r\n      paused: true\r\n    }\r\n  };\r\n*/\r\n\r\nexport const getSelectedTrackSource = (tracks, selected) => {\r\n  if (selected && tracks.byID[selected]) {\r\n    return tracks.byID[selected].audio\r\n  } else {\r\n    return '';\r\n  }\r\n};\r\n\r\nexport const getSelectedTrackTitle = (tracks, selected) => {\r\n  if (selected && tracks.byID[selected]) {\r\n    return tracks.byID[selected].name\r\n  } else {\r\n    return '';\r\n  }\r\n};\r\n\r\nexport const getTrackDuration = state => {\r\n  if (state.player.track) {\r\n    return state.tracks.byID[state.player.track].duration\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\nexport const getTrackTitle = state => {\r\n  if (state.player.track) {\r\n    const track =  state.tracks.byID[state.player.track];\r\n    return `${track.artist_name} - ${track.name}`;\r\n  }\r\n\r\n  return '';\r\n};\r\n\r\nexport const getTrackImage = state => {\r\n  if (state.player.track) {\r\n    return state.tracks.byID[state.player.track].album_image;\r\n  }\r\n\r\n  return '';\r\n};\r\n\r\n\r\nexport default combineReducers({\r\n  tracks,\r\n  player,\r\n  search,\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from '../reducers/';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer,\r\n  composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;","import * as types from './types';\r\n\r\nconst clientID = 'e996f43b';\r\nconst apiRoot = 'https://api.jamendo.com/v3.0/';\r\n\r\nexport const receiveTracks = tracks => ({\r\n  type: types.RECEIVE_TRACKS,\r\n  tracks\r\n});\r\n\r\nexport const playTrack = () => (dispatch, getState) => {\r\n  const state = getState();\r\n  if (!state.player.track) {\r\n    console.log(state.search.results[0]);\r\n    dispatch(selectTrack(state.search.results[0]));\r\n  }\r\n\r\n  dispatch({\r\n    type: types.SET_ON_PLAY\r\n  });\r\n};\r\n\r\nexport const stopTrack = () => ({\r\n  type: types.SET_ON_PAUSE\r\n});\r\n\r\nexport const nextTrack = () => (dispatch, getState) => {\r\n  const state = getState();\r\n  const playlist = state.tracks.inPlaylist;\r\n  let nextTrackIndex;\r\n\r\n  const currentTrackIndex = playlist.indexOf(state.player.track);\r\n\r\n  if (currentTrackIndex < playlist.length - 1) {\r\n    nextTrackIndex = currentTrackIndex + 1;\r\n  } else {\r\n    nextTrackIndex = 0;\r\n  }\r\n\r\n  dispatch(selectTrack(playlist[nextTrackIndex]));\r\n};\r\n\r\nexport const prevTrack = () => (dispatch, getState) => {\r\n  const state = getState();\r\n  const playlist = state.tracks.inPlaylist;\r\n  let prevTrackIndex;\r\n\r\n  const currentTrackIndex = playlist.indexOf(state.player.track);\r\n\r\n  if (currentTrackIndex > 0) {\r\n    prevTrackIndex = currentTrackIndex - 1;\r\n  } else {\r\n    prevTrackIndex = playlist.length - 1;\r\n  }\r\n\r\n  dispatch(selectTrack(playlist[prevTrackIndex]));\r\n};\r\n\r\nexport const setCurrentTime = time => ({\r\n  type: types.SET_CURRENT_TIME,\r\n  time\r\n});\r\n\r\nexport const setVolume = volume => ({\r\n  type: types.SET_VOLUME,\r\n  volume\r\n});\r\n\r\nexport const captureTimeSlider = volume => ({\r\n  type: types.CAPTURE_TIME_SLIDER,\r\n});\r\n\r\nexport const releaseTimeSlider = volume => ({\r\n  type: types.RELEASE_TIME_SLIDER,\r\n});\r\n\r\n\r\nexport const openFullPlayer = () => ({\r\n  type: types.OPEN_FULL_PLAYER\r\n});\r\n\r\nexport const closeFullPlayer = () => ({\r\n  type: types.CLOSE_FULL_PLAYER\r\n});\r\n\r\nexport const selectTrack = id => (dispatch, getState) => {\r\n  const state = getState();\r\n\r\n  if (state.search.results.indexOf(id) !== -1) {\r\n    dispatch({ \r\n      type: types.ADD_TRACKS_TO_PLAYLIST,\r\n      tracks: state.search.results\r\n    });\r\n    dispatch(setCurrentTime(0));\r\n    dispatch({\r\n      type: types.SELECT_TRACK,\r\n      id\r\n    });\r\n  }\r\n} \r\n\r\nexport const removeTracks = () => ({\r\n  type: types.REMOVE_TRACKS\r\n});\r\n\r\nexport const findTracksByName = (value) => (dispatch, getState) => {\r\n  const state = getState();\r\n  const queryParams = `client_id=${clientID}&limit=10&namesearch=${value}`;\r\n  const url = `${apiRoot}tracks/?${queryParams}`;\r\n  fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const inPlaylist = state.tracks.inPlaylist.map(id => state.tracks.byID[id]);\r\n      const tracks = inPlaylist.concat(data.results);\r\n      dispatch({\r\n        type: types.UPDATE_RESULTS,\r\n        tracks: data.results\r\n      });\r\n      dispatch(receiveTracks(tracks));\r\n  });\r\n}\r\n\r\n// export findMoreTracks = () => (dispatch, getState) => {\r\n//   const { search } = getState();\r\n//   fetch(search.next)\r\n//     .then(response => response.json())\r\n//     .then(data => {\r\n//       dispatch(removeTracks());\r\n//       dispatch(receiveTracks(data.results));\r\n//   });\r\n// }\r\n\r\nexport const fetchTracks = (params = {}) => dispatch => {\r\n  let queryParams = '';\r\n\r\n  if (typeof params === 'object') {\r\n    params.client_id = clientID;\r\n    params.limit = params.limit || 10;\r\n    params.order = params.order || 'popularity_total';    \r\n    for (let param in params) {\r\n      queryParams += `${param}=${params[param]}&`;\r\n    }\r\n  } else {\r\n    queryParams = params;\r\n  }\r\n\r\n\r\n  const url = `${apiRoot}tracks/?${queryParams}`\r\n  fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      dispatch({\r\n        type: types.UPDATE_RESULTS,\r\n        tracks: data.results\r\n      });\r\n      dispatch(receiveTracks(data.results));\r\n  });\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getTrackImage } from '../reducers/';\r\n\r\nconst style = {\r\n  width: '100%',\r\n  height: '100%',\r\n  display: 'block'\r\n};\r\n\r\nclass TrackImage extends Component {\r\n  render() {\r\n    return (<img style={style} src={this.props.src} />);\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  src: getTrackImage(state)\r\n});\r\n\r\nTrackImage.propTypes = {\r\n  src: PropTypes.string\r\n};\r\n\r\nexport default connect(mapStateToProps)(TrackImage);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { selectTrack, stopTrack, playTrack } from '../actions/';\r\n\r\nimport TrackImage from './TrackImage';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay,\r\n         faPause } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport '../styles/Track.css';\r\n\r\nclass Track extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n\r\n  handleClick() {\r\n    const { track, selected, selectTrack, playTrack, stopTrack, paused } = this.props;\r\n\r\n    if (track.id !== selected) {\r\n      selectTrack();\r\n      playTrack();\r\n    } else if (paused) {\r\n      playTrack();\r\n    } else {\r\n      stopTrack();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { track, paused, id, selected } = this.props;\r\n\r\n    if (!track) return null;\r\n    \r\n    return (\r\n      <div className={`track ${selected === id ? 'active' : ''}`}>\r\n        <div className='track-image-wrapper'>\r\n          <img className='track-image' src={track.album_image} />\r\n        </div>\r\n        <div className='track-title' title={track.name}>\r\n          <div title={track.name} className='track-name'>\r\n            {track.name}\r\n          </div>\r\n          <div title={track.artist_name} className='track-artist-name'>\r\n            {track.artist_name}\r\n          </div>\r\n          </div>\r\n        <div className='track-play-btn-wrapper'>       \r\n          <button\r\n            className={`track-play-btn ${selected === id ? 'active' : ''}`}\r\n            onClick={this.handleClick}>\r\n            <FontAwesomeIcon icon={paused ? faPlay : faPause}/>\r\n          </button>                 \r\n        </div>\r\n      </div>  \r\n    )\r\n  }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state, { id }) => ({\r\n  track: state.tracks.byID[id],\r\n  selected: state.player.track,\r\n  paused:  isPaused(state.player.paused, state.player.track, id)\r\n});\r\n\r\nconst isPaused = (paused ,selected, id) => {\r\n  if (selected === id) {\r\n    return paused;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst mapStateToDispatch = (dispatch, { id }) => ({\r\n  selectTrack() {\r\n    dispatch(selectTrack(id));\r\n  },\r\n  playTrack() {\r\n    return dispatch(playTrack());\r\n  },\r\n  stopTrack() {\r\n    dispatch(stopTrack());\r\n  }\r\n});\r\n\r\nTrack.propTypes = {\r\n  track: PropTypes.object,\r\n  selected: PropTypes.string,\r\n  paused: PropTypes.bool.isRequired,\r\n  selectTrack: PropTypes.func.isRequired,\r\n  playTrack: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapStateToDispatch)(Track);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { fetchTracks } from '../actions/';\r\n\r\nimport Track from './Track';\r\n\r\nclass Tracklist extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchTracks();\r\n  }\r\n\r\n  render() {\r\n    const { tracks } = this.props;\r\n    return (\r\n      <div>  \r\n        {tracks.map(id => <Track key={id} id={id}/>)}\r\n      </div>  \r\n    )\r\n  }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  tracks: state.search.results,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchTracks() {\r\n    dispatch(fetchTracks());\r\n  }\r\n});\r\n\r\nTracklist.propTypes = {\r\n  tracks: PropTypes.array,\r\n  fetchTracks: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tracklist);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../styles/ProgressSlider.css';\r\n\r\nimport { getTrackDuration } from '../reducers/';\r\n\r\nimport { setCurrentTime, captureTimeSlider, releaseTimeSlider } from '../actions/';\r\n\r\nclass TimeProgressSlider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      progress: 0\r\n    };\r\n\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    this.clientRect = e.currentTarget.getBoundingClientRect();\r\n    const part = this.clientRect.width / 100;\r\n    let progress = (e.clientX - this.clientRect.left)  / part;\r\n    window.addEventListener('mousemove', this.handleMouseMove);\r\n    window.addEventListener('mouseup', this.handleMouseUp);\r\n    this.props.captureSlider();\r\n    this.setState({ progress: progress });\r\n  }\r\n\r\n  handleMouseUp(e) {\r\n    const part = this.clientRect.width / 100;\r\n    let progress = (e.clientX - this.clientRect.left)  / part;\r\n    let durationPart = this.props.duration / 100;\r\n    window.removeEventListener('mousemove', this.handleMouseMove);\r\n    window.removeEventListener('mouseup', this.handleMouseUp);\r\n    if (progress > 100) {\r\n      progress = 100;\r\n    } else if (progress < 0) {\r\n      progress = 0;\r\n    }\r\n    this.props.setCurrentTime(Math.round(durationPart * progress));\r\n    this.props.releaseSlider();\r\n  }\r\n\r\n  handleMouseMove(e) {\r\n    const part = this.clientRect.width / 100;\r\n    let progress = (e.clientX - this.clientRect.left)  / part;\r\n\r\n    if (progress > 100) {\r\n      progress = 100;\r\n    } else if (progress < 0) {\r\n      progress = 0;\r\n    }\r\n\r\n    this.setState({ progress: progress });\r\n  }\r\n\r\n  render() {\r\n    const { duration,\r\n            currentTime,\r\n            sliderCaptured,\r\n            large } = this.props;\r\n    const { progress } = this.state;\r\n    let timeProgress = 0;\r\n\r\n    if (duration) {\r\n      const part = duration / 100;\r\n      timeProgress = currentTime / part ;\r\n    }\r\n\r\n    const progressSliderStyle = {\r\n      padding: large ? '' : '3px 0'\r\n    };\r\n    const fillerStyle = {\r\n      width: (sliderCaptured ? progress : timeProgress) + '%'\r\n    };\r\n    const handlerStyle = {\r\n      opacity: sliderCaptured ? '1' : '',\r\n      left: (sliderCaptured ? progress : timeProgress) + '%',\r\n      width: `${large ? 16 : 8}px`,\r\n      height: `${large ? 16 : 8}px`\r\n    };\r\n\r\n    return (\r\n\r\n      <div\r\n        className='progress-slider'\r\n        style={progressSliderStyle}\r\n        onMouseDown={this.handleMouseDown}>\r\n        <div className='progress-slider_line'>\r\n          <div\r\n            className='progress-slider_filler' \r\n            style={fillerStyle}>\r\n          </div>\r\n          <div\r\n            style={handlerStyle}\r\n            className='progress-slider_handler'>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  duration: getTrackDuration(state),\r\n  currentTime: state.player.currentTime,\r\n  sliderCaptured: state.player.timeSliderCaptured\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentTime(time) {\r\n    dispatch(setCurrentTime(time));\r\n  },\r\n  captureSlider() {\r\n    dispatch(captureTimeSlider());\r\n  },\r\n  releaseSlider() {\r\n    dispatch(releaseTimeSlider());\r\n  }\r\n});\r\n\r\nTimeProgressSlider.propTypes = {\r\n  duration: PropTypes.number.isRequired,\r\n  large: PropTypes.bool,\r\n  currentTime: PropTypes.number.isRequired,\r\n  sliderCaptured: PropTypes.bool.isRequired,\r\n  setCurrentTime: PropTypes.func.isRequired,\r\n  captureSlider: PropTypes.func.isRequired,\r\n  releaseSlider: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TimeProgressSlider);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport '../styles/VolumeControl.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faVolumeMute,\r\n         faVolumeUp,\r\n         faVolumeDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { setVolume } from '../actions/';\r\n\r\nclass VolumeControl extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isOpen: false\r\n    }\r\n\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n\r\n    this.handleFocus = this.handleFocus.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n\r\n    this.handleVolumeMute = this.handleVolumeMute.bind(this);\r\n    this.handleVolumeUp = this.handleVolumeUp.bind(this);\r\n  }\r\n\r\n  handleFocus() {\r\n    this.setState({ isOpen: true });\r\n  }\r\n\r\n  handleBlur() {\r\n    this.setState({ isOpen: false });\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    this.clientRect = e.currentTarget.getBoundingClientRect();\r\n    const part = this.clientRect.height / 100;\r\n    let volume = (e.clientY - this.clientRect.top)  / part;\r\n    window.addEventListener('mousemove', this.handleMouseMove);\r\n    window.addEventListener('mouseup', this.handleMouseUp);\r\n    volume = 100 - volume;\r\n    volume = volume / 100;\r\n    this.props.setVolume(volume);\r\n  }\r\n\r\n  handleMouseUp(e) {\r\n    window.removeEventListener('mousemove', this.handleMouseMove);\r\n    window.removeEventListener('mouseup', this.handleMouseUp);\r\n  }\r\n\r\n  handleMouseMove(e) {\r\n    const part = this.clientRect.height / 100;\r\n    let volume = (e.clientY - this.clientRect.top)  / part;\r\n    volume = 100 - volume;\r\n\r\n    if (volume > 100) {\r\n      volume =  100;\r\n    } else if (volume < 0) {\r\n      volume = 0;\r\n    }\r\n\r\n    volume = volume / 100;\r\n    this.props.setVolume(volume);\r\n  }\r\n\r\n  handleVolumeUp() {\r\n    this.props.setVolume(1);\r\n  }\r\n\r\n  handleVolumeMute() {\r\n    this.props.setVolume(0);\r\n  }\r\n\r\n  render() {\r\n    const { volume, className } = this.props;\r\n    const { isOpen } = this.state;\r\n    return (\r\n      <button\r\n        className={className}\r\n        onFocus={this.handleFocus}\r\n        onBlur={this.handleBlur}>\r\n        <div \r\n          className='volume-control'\r\n          style={{ display: isOpen ? 'flex' : 'none'}}>\r\n          <div \r\n            className='volume-control-btn'\r\n            onClick={this.handleVolumeUp}>\r\n              <FontAwesomeIcon icon={faVolumeUp} />\r\n          </div>\r\n          <div \r\n            className='volume-control-slider'\r\n            onMouseDown={this.handleMouseDown}>\r\n            <div \r\n              className='volume-control-slider-filler'\r\n              style={{height: `${volume * 100}%`}}>\r\n            </div>\r\n          </div>\r\n          <div \r\n            className='volume-control-btn'\r\n            onClick={this.handleVolumeMute}>\r\n            <FontAwesomeIcon icon={faVolumeMute} />\r\n          </div>\r\n        </div>\r\n        <FontAwesomeIcon icon={getVolumeIcon(volume)}/>\r\n      </button>\r\n    );\r\n  }\r\n};\r\n\r\nconst getVolumeIcon = volume => {\r\n  if (volume < 0.4 && volume !== 0) {\r\n    return faVolumeDown;\r\n  } else if (volume === 0) {\r\n    return faVolumeMute;\r\n  }\r\n\r\n  return faVolumeUp;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  volume: state.player.volume\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setVolume(volume) {\r\n    dispatch(setVolume(volume))\r\n  }\r\n});\r\n\r\nVolumeControl.propTypes = {\r\n  volume: PropTypes.number.isRequired,\r\n  setVolume: PropTypes.func.isRequired,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VolumeControl);","export const getTimeString = seconds => {\r\n    let minutes = parseInt(seconds / 60);\r\n        seconds = seconds % 60;\r\n\r\n    if (minutes < 10) {\r\n      minutes = `0${minutes}`;\r\n    }\r\n\r\n    if (seconds < 10) {\r\n      seconds = `0${seconds}`;\r\n    }\r\n\r\n    return `${minutes}:${seconds}`;\r\n};","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getTimeString } from '../helperFunctions';\r\n\r\nimport { getTrackDuration } from '../reducers/';\r\n\r\nclass TrackDuration extends Component {\r\n  render() {\r\n    const { duration } = this.props;\r\n\r\n    return duration ? getTimeString(duration) : '00:00';\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  duration: getTrackDuration(state)\r\n});\r\n\r\nTrackDuration.propTypes = {\r\n  duration: PropTypes.number\r\n};\r\n\r\nexport default connect(mapStateToProps)(TrackDuration);","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getTimeString } from '../helperFunctions';\r\n\r\nclass TrackCurrentTime extends Component {\r\n  render() {\r\n    const { currentTime } = this.props;\r\n\r\n    return currentTime ? getTimeString(currentTime) : '00:00';\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentTime: state.player.currentTime\r\n});\r\n\r\nTrackCurrentTime.propTypes = {\r\n  currentTime: PropTypes.number\r\n};\r\n\r\nexport default connect(mapStateToProps)(TrackCurrentTime);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getTrackTitle } from '../reducers/';\r\n\r\nclass TrackDuration extends Component {\r\n  render() {\r\n    const { title, className } = this.props;\r\n\r\n    return (\r\n      <div\r\n        title={title} \r\n        className={className}>\r\n        {title}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  title: getTrackTitle(state)\r\n});\r\n\r\nTrackDuration.propTypes = {\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default connect(mapStateToProps)(TrackDuration);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay,\r\n         faPause } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { playTrack,\r\n         stopTrack } from '../actions/';\r\n\r\nclass PlayBtn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    const { paused, play, pause } = this.props;\r\n\r\n    if (paused) {\r\n      play();\r\n    } else {\r\n      pause();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { paused, className, size } = this.props;\r\n\r\n    return (\r\n      <button\r\n        onClick={this.handleClick} \r\n        className={className}>\r\n        <FontAwesomeIcon \r\n          icon={ paused ? faPlay : faPause} \r\n          size={size} />\r\n      </button>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  paused: state.player.paused\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  play() {\r\n    dispatch(playTrack());\r\n  },\r\n  pause() {\r\n    dispatch(stopTrack());\r\n  }\r\n});\r\n\r\nPlayBtn.propTypes = {\r\n  paused: PropTypes.bool.isRequired,\r\n  play: PropTypes.func.isRequired,\r\n  pause: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayBtn);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStepForward } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { nextTrack } from '../actions/';\r\n\r\nclass NextBtn extends Component {\r\n  render() {\r\n    const { next, className, size } = this.props;\r\n\r\n    return (\r\n      <button\r\n        onClick={next} \r\n        className={className}>\r\n        <FontAwesomeIcon \r\n          icon={faStepForward}\r\n          size={size} />\r\n      </button>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  next() {\r\n    dispatch(nextTrack());\r\n  },\r\n});\r\n\r\nNextBtn.propTypes = {\r\n  next: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(NextBtn);","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStepBackward } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { prevTrack } from '../actions/';\r\n\r\nclass PrevBtn extends Component {\r\n  render() {\r\n    const { previous, className, size } = this.props;\r\n\r\n    return (\r\n      <button\r\n        onClick={previous} \r\n        className={className}>\r\n        <FontAwesomeIcon \r\n          icon={faStepBackward}\r\n          size={size} />\r\n      </button>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  previous() {\r\n    dispatch(prevTrack());\r\n  },\r\n});\r\n\r\nPrevBtn.propTypes = {\r\n  previous: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(PrevBtn);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { openFullPlayer } from '../actions/';\r\n\r\nclass FullPlayerOpenBtn extends Component {\r\n  render() {\r\n    const { open, className } = this.props;\r\n\r\n    return (\r\n      <button\r\n        onClick={open} \r\n        className={className}>\r\n        <FontAwesomeIcon icon={faCaretUp} size='2x' />\r\n      </button>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  open() {\r\n    dispatch(openFullPlayer());\r\n  },\r\n});\r\n\r\nFullPlayerOpenBtn.propTypes = {\r\n  open: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(FullPlayerOpenBtn);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TimeProgressSlider from './TimeProgressSlider';\r\nimport VolumeControl from './VolumeControl';\r\nimport TrackDuration from './TrackDuration';\r\nimport TrackCurrentTime from './TrackCurrentTime';\r\nimport TrackTitle from './TrackTitle';\r\nimport PlayBtn from './PlayBtn';\r\nimport NextBtn from './NextBtn';\r\nimport PrevBtn from './PrevBtn';\r\nimport FullPlayerOpenBtn from './FullPlayerOpenBtn';\r\n\r\nimport '../styles/Player.css';\r\n\r\nclass Player extends Component {\r\n  render() {\r\n    const { track } = this.props;\r\n    return (\r\n      <div\r\n        className={`player-wrapper ${track ? '' : 'player-wrapper-hidden'}`}>\r\n        <div className='player'>\r\n          <div className='player-section-sm'>\r\n            <FullPlayerOpenBtn className='player-full-btn' />\r\n          </div>\r\n          <div className='player-section-lg'>\r\n            <div className='player-track'>\r\n              <div className='player-track-info'>\r\n                <TrackTitle className='player-track-info-title' />\r\n                <div className='player-track-info-duration'>\r\n                  <TrackCurrentTime /> / <TrackDuration />\r\n                </div>\r\n              </div>\r\n              <div className='player-track-progress-slider'>\r\n                <TimeProgressSlider />\r\n              </div>\r\n            </div>\r\n            <div className='player-controls-wrapper'>\r\n              <div className='player-controls player-control-prev'>    \r\n                <PrevBtn className='player-control-btn' />\r\n              </div>\r\n              <div className='player-controls player-control-play'>    \r\n                <PlayBtn \r\n                  className='player-control-btn'\r\n                  size='lg' />\r\n              </div>\r\n              <div className='player-controls player-control-next'>    \r\n                <NextBtn className='player-control-btn' />\r\n              </div>\r\n              <div className='player-controls player-control-volume'> \r\n                <VolumeControl className='player-control-btn player-control-btn-volume' />   \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  track: state.player.track,\r\n});\r\n\r\n\r\nPlayer.propTypes = {\r\n  track: PropTypes.object,\r\n};\r\n\r\nexport default connect(mapStateToProps)(Player);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { closeFullPlayer } from '../actions/';\r\n\r\nclass FullPlayerCloseBtn extends Component {\r\n  render() {\r\n    const { close, className } = this.props;\r\n\r\n    return (\r\n      <button\r\n        onClick={close} \r\n        className={className}>\r\n        <FontAwesomeIcon icon={faCaretDown} size='2x' />\r\n      </button>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  close() {\r\n    dispatch(closeFullPlayer());\r\n  },\r\n});\r\n\r\nFullPlayerCloseBtn.propTypes = {\r\n  close: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(FullPlayerCloseBtn);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport '../styles/VolumeControlFull.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faVolumeMute,\r\n         faVolumeUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { setVolume } from '../actions/';\r\n\r\nclass VolumeControlFull extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n\r\n    this.handleVolumeMute = this.handleVolumeMute.bind(this);\r\n    this.handleVolumeUp = this.handleVolumeUp.bind(this);\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    this.clientRect = e.currentTarget.getBoundingClientRect();\r\n    const part = this.clientRect.width / 100;\r\n    let volume = (e.clientX - this.clientRect.left)  / part;\r\n    window.addEventListener('mousemove', this.handleMouseMove);\r\n    window.addEventListener('mouseup', this.handleMouseUp);\r\n    volume = volume / 100;\r\n    this.props.setVolume(volume);\r\n  }\r\n\r\n  handleMouseUp(e) {\r\n    window.removeEventListener('mousemove', this.handleMouseMove);\r\n    window.removeEventListener('mouseup', this.handleMouseUp);\r\n  }\r\n\r\n  handleMouseMove(e) {\r\n    const part = this.clientRect.width / 100;\r\n    let volume = (e.clientX - this.clientRect.left)  / part;\r\n\r\n    if (volume > 100) {\r\n      volume =  100;\r\n    } else if (volume < 0) {\r\n      volume = 0;\r\n    }\r\n\r\n    volume = volume / 100;\r\n    this.props.setVolume(volume);\r\n  }\r\n\r\n  handleVolumeUp() {\r\n    this.props.setVolume(1);\r\n  }\r\n\r\n  handleVolumeMute() {\r\n    this.props.setVolume(0);\r\n  }\r\n\r\n  render() {\r\n    const { volume, className } = this.props;\r\n    return (\r\n      <div \r\n        className='volume-control-full'>\r\n        <div\r\n          title='Выключить звук'\r\n          className='volume-control-full-btn-wrapper'>\r\n          <div \r\n            className='volume-control-full-btn'\r\n            onClick={this.handleVolumeMute}>\r\n            <FontAwesomeIcon icon={faVolumeMute} size='lg' />\r\n          </div>\r\n        </div>\r\n        <div \r\n          className='volume-control-full-slider'\r\n          onMouseDown={this.handleMouseDown}>\r\n          <div \r\n            className='volume-control-full-slider-filler'\r\n            style={{width: `${volume * 100}%`}}>\r\n          </div>\r\n        </div>\r\n        <div\r\n          title='Полная громкость'\r\n          className='volume-control-full-btn-wrapper'>\r\n            <div \r\n              className='volume-control-full-btn'\r\n              onClick={this.handleVolumeUp}>\r\n              <FontAwesomeIcon icon={faVolumeUp} size='lg' />\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  volume: state.player.volume\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setVolume(volume) {\r\n    dispatch(setVolume(volume))\r\n  }\r\n});\r\n\r\nVolumeControlFull.propTypes = {\r\n  volume: PropTypes.number.isRequired,\r\n  setVolume: PropTypes.func.isRequired,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VolumeControlFull);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Track from './Track';\r\n\r\nimport '../styles/Playlist.css';\r\n\r\nclass Playlist extends Component {\r\n  render() {\r\n    const { tracks } = this.props;\r\n\r\n    return (\r\n      <div className='playlist'>\r\n        {tracks.map(id => <Track key={id} id={id}/>)}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tracks: state.tracks.inPlaylist\r\n});\r\n\r\nPlaylist.propTypes = {\r\n  tracks: PropTypes.array\r\n};\r\n\r\nexport default connect(mapStateToProps)(Playlist);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../styles/FullPlayer.css';\r\n\r\nimport FullPlayerCloseBtn from './FullPlayerCloseBtn';\r\nimport VolumeControlFull from './VolumeControlFull';\r\nimport TrackImage from './TrackImage';\r\nimport PlayBtn from './PlayBtn';\r\nimport NextBtn from './NextBtn';\r\nimport PrevBtn from './PrevBtn';\r\nimport TrackTitle from './TrackTitle';\r\nimport TimeProgressSlider from './TimeProgressSlider';\r\nimport TrackDuration from './TrackDuration';\r\nimport TrackCurrentTime from './TrackCurrentTime';\r\nimport Playlist from './Playlist';\r\n\r\nclass FullPlayer extends Component {\r\n  render() {\r\n    const { isOpen } = this.props;\r\n\r\n    return (\r\n      <div \r\n        className='full-player-wrapper'\r\n        style={{display: isOpen ? 'block' : 'none'}}>\r\n        <div className='filter'>\r\n        </div>\r\n        <div className='full-player'>\r\n          <div className='full-player-close-btn-wrapper'>\r\n            <FullPlayerCloseBtn className='full-player-close-btn' />\r\n          </div>\r\n          <div className='full-player-playlist-wrapper'>\r\n            <Playlist />\r\n          </div>\r\n          <div className='full-player-track-info-wrapper'>\r\n            <div className='full-player-track-info'>\r\n              <div className='full-player-track-img'>\r\n                <TrackImage />\r\n              </div>\r\n              <div className='full-player-track-data'>\r\n                <div className='full-player-track-data-title'>\r\n                  <TrackTitle />\r\n                </div>\r\n                <div className='full-player-track-data-row'>\r\n                  <div className='full-player-track-current-time'>\r\n                    <TrackCurrentTime />\r\n                  </div>\r\n                  <div className='full-player-track-time-progress-slider'>\r\n                    <TimeProgressSlider large />\r\n                  </div>\r\n                  <div className='full-player-track-duration'>\r\n                    <TrackDuration />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='full-player-controls-wrapper'>\r\n            <div className='full-player-controls'>\r\n              <div className='full-player-volume-wrapper'>\r\n                <VolumeControlFull />\r\n              </div>\r\n              <div className='full-player-btn-wrapper'>\r\n                <PrevBtn \r\n                  className='full-player-btn'\r\n                  size='2x' />\r\n                <PlayBtn \r\n                  className='full-player-btn'\r\n                  size='2x' />\r\n                <NextBtn \r\n                  className='full-player-btn'\r\n                  size='2x' />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isOpen: state.player.fullPlayerOpen\r\n});\r\n\r\nFullPlayer.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps)(FullPlayer);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { findTracksByName } from '../actions/';\r\n\r\nimport '../styles/Search.css';\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: ''\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleChange({ target }) {\r\n    this.setState({ value: target.value });\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.searchFor(this.state.value);\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <div className='search'>\r\n        <input className='search-input' onChange={this.handleChange} value={value} />\r\n        <button className='search-btn' onClick={this.handleClick}>\r\n          Search\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToDispatch = dispatch => ({\r\n  searchFor(value) {\r\n    dispatch(findTracksByName(value))\r\n  }\r\n});\r\n\r\nSearch.propTypes = {\r\n  searchFor: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null,mapStateToDispatch)(Search);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { setCurrentTime, nextTrack } from '../actions/';\r\n\r\nclass Audio extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.audioRef = React.createRef();\r\n\r\n    this.handleTimeUpdate = this.handleTimeUpdate.bind(this);\r\n  }\r\n\r\n  handleTimeUpdate() {\r\n    const time = Math.floor(this.audioRef.current.currentTime);\r\n    if (time > this.props.currentTime) {\r\n      this.props.setCurrentTime(time);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { paused, volume, currentTime } = this.props;\r\n    const audio = this.audioRef.current;\r\n\r\n    if (paused) {\r\n      audio.pause();\r\n    } else {\r\n      audio.play();\r\n    }\r\n\r\n    if (volume !== audio.volume) {\r\n      audio.volume = volume;\r\n    }\r\n\r\n    if (prevProps.timeSliderCaptured === true && this.props.timeSliderCaptured === false) {\r\n      audio.currentTime = currentTime;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { track, nextTrack } = this.props;\r\n    return (\r\n      <audio\r\n        src={track ? track.audio : ''}\r\n        ref={this.audioRef}\r\n        onEnded={nextTrack}\r\n        onTimeUpdate={this.handleTimeUpdate}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  track: state.tracks.byID[state.player.track],\r\n  currentTime: state.player.currentTime,\r\n  paused: state.player.paused,\r\n  volume: state.player.volume,\r\n  timeSliderCaptured: state.player.timeSliderCaptured\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentTime(time) {\r\n    dispatch(setCurrentTime(time));\r\n  },\r\n  nextTrack() {\r\n    dispatch(nextTrack());\r\n  }\r\n});\r\n\r\nAudio.propTypes = {\r\n  track: PropTypes.object,\r\n  paused: PropTypes.bool.isRequired,\r\n  volume: PropTypes.number.isRequired,\r\n  timeSliderCaptured: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Audio);","import React, { Component, Fragment } from 'react';\r\n\r\nimport Tracklist from './components/Tracklist';\r\nimport Player from './components/Player';\r\nimport FullPlayer from './components/FullPlayer';\r\nimport Search from './components/Search';\r\nimport Audio from './components/Audio';\r\n\r\nconst AppStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  marginBottom: '48px'\r\n};\r\n\r\nconst titleStyle = {\r\n  textAlign: 'center',\r\n  color: '#90bfb3'\r\n};\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div style={AppStyle}>\r\n          <div style={{ width: '320px' }}>\r\n            <h2 style={titleStyle}>\r\n              Find Your Music!\r\n            </h2>\r\n            <Search />\r\n            <Tracklist />\r\n          </div>\r\n        </div>\r\n          <Player />\r\n        <FullPlayer />\r\n        <Audio />\r\n      </Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}