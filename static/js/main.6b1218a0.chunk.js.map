{"version":3,"sources":["reducers/tracks.js","actions/types.js","reducers/search.js","reducers/player.js","reducers/index.js","store/index.js","actions/index.js","components/Track.js","components/Tracklist.js","components/TimeProgressSlider.js","components/Player.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["combineReducers","byID","state","arguments","length","undefined","action","type","tracks","forEach","track","id","allIDs","Object","toConsumableArray","map","inPlaylist","results","paused","getSelectedTrackTitle","selected","name","player","search","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","apiRoot","receiveTracks","playTrack","dispatch","getState","console","log","selectTrack","indexOf","Track","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","_this$props","stopTrack","_this$props2","react_default","a","createElement","className","concat","title","onClick","Component","isPaused","connect","_ref","_ref2","Tracklist","fetchTracks","components_Track","key","params","queryParams","param","client_id","limit","order","url","fetch","then","response","json","data","TimeProgressSlider","progress","captured","handleMouseDown","handleMouseUp","handleMouseMove","e","clientRect","currentTarget","getBoundingClientRect","part","width","clientX","left","addEventListener","onCaptured","onTimeProgressChange","setState","removeEventListener","onTimeChange","timeProgress","fillerStyle","handlerStyle","opacity","onEnter","handleEnter","onMouseDown","style","Player","currentTime","duration","audioRef","React","createRef","handleBtnPlayClick","handleEnded","handleTimeUpdate","handleMetaData","handleTimeChange","handleCapturedSlider","handleTimeProgressUpdate","handleTimeProgressChange","play","pause","next","current","audio","Math","round","minutes","parseInt","seconds","time","currentProgress","prev","_this$state","onEnded","ref","src","onLoadedMetadata","onTimeUpdate","textOverflow","components_TimeProgressSlider","playlist","currentTrackIndex","Search","value","handleChange","target","searchFor","onChange","findTracksByName","AppStyle","display","justifyContent","marginTop","titleStyle","textAlign","color","App","components_Search","components_Tracklist","components_Player","Boolean","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b1218a0.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nimport * as types from '../actions/types';\r\n\r\nconst byID = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.RECEIVE_TRACKS:\r\n      const tracks = {}\r\n      action.tracks.forEach(track => tracks[track.id] = track);\r\n      return tracks;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst allIDs = (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.RECEIVE_TRACKS:\r\n      return [\r\n        ...action.tracks.map(track => track.id)\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst inPlaylist = (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.ADD_TRACKS_TO_PLAYLIST:\r\n      return action.tracks;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  byID,\r\n  allIDs,\r\n  inPlaylist\r\n});","\r\nexport const RECEIVE_TRACKS = 'RECEIVE_TRACKS';\r\nexport const REMOVE_TRACKS = 'REMOVE_TRACKS';\r\n\r\nexport const UPDATE_RESULTS = 'UPDATE_RESULTS';\r\n\r\nexport const ADD_TRACKS_TO_PLAYLIST = 'ADD_TRACKS_TO_PLAYLIST';\r\n\r\nexport const SELECT_TRACK = 'SELECT_TRACK';\r\nexport const SET_ON_PAUSE = 'SET_ON_PAUSE';\r\nexport const SET_ON_PLAY = 'SET_ON_PLAY';\r\n","import { combineReducers } from 'redux';\r\n\r\nimport * as types from '../actions/types';\r\n\r\nconst results = (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.UPDATE_RESULTS:\r\n      return [\r\n        ...action.tracks.map(track => track.id)\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  results\r\n});","import { combineReducers } from 'redux';\r\n\r\nimport * as types from '../actions/types';\r\n\r\nconst track = (state = '', action) => {\r\n  if (action.type === types.SELECT_TRACK) {\r\n    return action.id;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst paused = (state = true, action) => {\r\n  if (action.type === types.SET_ON_PAUSE) {\r\n    return true;\r\n  } else if (action.type === types.SET_ON_PLAY) {\r\n    return false;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default combineReducers({\r\n  track,\r\n  paused\r\n});","import { combineReducers } from 'redux';\r\n\r\nimport tracks from './tracks';\r\nimport search from './search';\r\nimport player from './player';\r\n\r\n/*\r\n  const initState = {\r\n    tracks: {\r\n      byID: {},\r\n      allIDs: [],\r\n      inPlaylist: []\r\n    },\r\n    search: {\r\n      value: '',\r\n      results: [],\r\n      next: ''\r\n    },\r\n    player: {\r\n      track: '',\r\n      paused: true\r\n    }\r\n  };\r\n*/\r\n\r\nexport const getSelectedTrackSource = (tracks, selected) => {\r\n  if (selected && tracks.byID[selected]) {\r\n    return tracks.byID[selected].audio\r\n  } else {\r\n    return '';\r\n  }\r\n};\r\n\r\nexport const getSelectedTrackTitle = (tracks, selected) => {\r\n  if (selected && tracks.byID[selected]) {\r\n    return tracks.byID[selected].name\r\n  } else {\r\n    return '';\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  tracks,\r\n  player,\r\n  search\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from '../reducers/';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer,\r\n  composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;","import * as types from './types';\r\n\r\nconst clientID = 'e996f43b';\r\nconst apiRoot = 'https://api.jamendo.com/v3.0/';\r\n\r\nexport const receiveTracks = tracks => ({\r\n  type: types.RECEIVE_TRACKS,\r\n  tracks\r\n});\r\n\r\nexport const playTrack = () => (dispatch, getState) => {\r\n  const state = getState();\r\n  if (!state.player.track) {\r\n    console.log(state.search.results[0]);\r\n    dispatch(selectTrack(state.search.results[0]));\r\n  }\r\n\r\n  dispatch({\r\n    type: types.SET_ON_PLAY\r\n  });\r\n};\r\n\r\nexport const stopTrack = () => ({\r\n  type: types.SET_ON_PAUSE\r\n});\r\n\r\nexport const nextTrack = () => (dispatch, getState) => {\r\n  const state = getState();\r\n  const playlist = state.tracks.inPlaylist;\r\n  let nextTrackIndex;\r\n\r\n  const currentTrackIndex = playlist.indexOf(state.player.track);\r\n\r\n  if (currentTrackIndex < playlist.length - 1) {\r\n    nextTrackIndex = currentTrackIndex + 1;\r\n  } else {\r\n    nextTrackIndex = 0;\r\n  }\r\n\r\n  dispatch({\r\n    type: types.SELECT_TRACK,\r\n    id: playlist[nextTrackIndex]\r\n  });\r\n};\r\n\r\nexport const prevTrack = () => (dispatch, getState) => {\r\n  const state = getState();\r\n  const playlist = state.tracks.inPlaylist;\r\n  let prevTrackIndex;\r\n\r\n  const currentTrackIndex = playlist.indexOf(state.player.track);\r\n\r\n  if (currentTrackIndex > 0) {\r\n    prevTrackIndex = currentTrackIndex - 1;\r\n  } else {\r\n    prevTrackIndex = playlist.length - 1;\r\n  }\r\n\r\n  dispatch({\r\n    type: types.SELECT_TRACK,\r\n    id: playlist[prevTrackIndex]\r\n  });\r\n};\r\n\r\n// export const selectTrack = id => ({\r\n//   type: types.SELECT_TRACK,\r\n//   id\r\n// });\r\n\r\nexport const selectTrack = id => (dispatch, getState) => {\r\n  const state = getState();\r\n\r\n  if (state.search.results.indexOf(id) !== -1) {\r\n    dispatch({ \r\n      type: types.ADD_TRACKS_TO_PLAYLIST,\r\n      tracks: state.search.results\r\n    });\r\n    dispatch({\r\n      type: types.SELECT_TRACK,\r\n      id\r\n    });\r\n  }\r\n} \r\n\r\nexport const removeTracks = () => ({\r\n  type: types.REMOVE_TRACKS\r\n});\r\n\r\nexport const findTracksByName = (value) => (dispatch, getState) => {\r\n  const state = getState();\r\n  const queryParams = `client_id=${clientID}&limit=10&namesearch=${value}`;\r\n  const url = `${apiRoot}tracks/?${queryParams}`;\r\n  fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const inPlaylist = state.tracks.inPlaylist.map(id => state.tracks.byID[id]);\r\n      const tracks = inPlaylist.concat(data.results);\r\n      dispatch({\r\n        type: types.UPDATE_RESULTS,\r\n        tracks: data.results\r\n      });\r\n      dispatch(receiveTracks(tracks));\r\n  });\r\n}\r\n\r\n// export findMoreTracks = () => (dispatch, getState) => {\r\n//   const { search } = getState();\r\n//   fetch(search.next)\r\n//     .then(response => response.json())\r\n//     .then(data => {\r\n//       dispatch(removeTracks());\r\n//       dispatch(receiveTracks(data.results));\r\n//   });\r\n// }\r\n\r\nexport const fetchTracks = (params = {}) => dispatch => {\r\n  let queryParams = '';\r\n\r\n  if (typeof params === 'object') {\r\n    params.client_id = clientID;\r\n    params.limit = params.limit || 10;\r\n    params.order = params.order || 'popularity_total';    \r\n    for (let param in params) {\r\n      queryParams += `${param}=${params[param]}&`;\r\n    }\r\n  } else {\r\n    queryParams = params;\r\n  }\r\n\r\n\r\n  const url = `${apiRoot}tracks/?${queryParams}`\r\n  fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      dispatch({\r\n        type: types.UPDATE_RESULTS,\r\n        tracks: data.results\r\n      });\r\n      dispatch(receiveTracks(data.results));\r\n  });\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { selectTrack, stopTrack, playTrack } from '../actions/';\r\n\r\nimport '../styles/Track.css';\r\n\r\nclass Track extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n\r\n  handleClick() {\r\n    const { track, selected, selectTrack, playTrack, stopTrack, paused } = this.props;\r\n\r\n    if (track.id !== selected) {\r\n      selectTrack();\r\n      playTrack();\r\n    } else if (paused) {\r\n      playTrack();\r\n    } else {\r\n      stopTrack();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { track, paused, id, selected } = this.props;\r\n\r\n    if (!track) return null;\r\n    \r\n    return (\r\n      <div className={`track ${selected === id ? 'active' : ''}`}>  \r\n        <div className='track-title' title={track.name}>{track.name}</div>\r\n        <div className='track-play-btn-wrapper'>       \r\n          <button\r\n            className='track-play-btn'\r\n            onClick={this.handleClick}>\r\n            <div className={`track-${paused ? 'play' : 'pause'}-icon`}>\r\n            </div>\r\n          </button>                 \r\n        </div>\r\n      </div>  \r\n    )\r\n  }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state, { id }) => ({\r\n  track: state.tracks.byID[id],\r\n  selected: state.player.track,\r\n  paused:  isPaused(state.player.paused, state.player.track, id)\r\n});\r\n\r\nconst isPaused = (paused ,selected, id) => {\r\n  if (selected === id) {\r\n    return paused;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst mapStateToDispatch = (dispatch, { id }) => ({\r\n  selectTrack() {\r\n    dispatch(selectTrack(id));\r\n  },\r\n  playTrack() {\r\n    return dispatch(playTrack());\r\n  },\r\n  stopTrack() {\r\n    dispatch(stopTrack());\r\n  }\r\n});\r\n\r\nTrack.propTypes = {\r\n  track: PropTypes.object,\r\n  selected: PropTypes.string,\r\n  paused: PropTypes.bool.isRequired,\r\n  selectTrack: PropTypes.func.isRequired,\r\n  playTrack: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapStateToDispatch)(Track);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { fetchTracks } from '../actions/';\r\n\r\nimport Track from './Track';\r\n\r\nclass Tracklist extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchTracks();\r\n  }\r\n\r\n  render() {\r\n    const { tracks } = this.props;\r\n    return (\r\n      <div>  \r\n        {tracks.map(id => <Track key={id} id={id}/>)}\r\n      </div>  \r\n    )\r\n  }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  tracks: state.search.results,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchTracks() {\r\n    dispatch(fetchTracks());\r\n  }\r\n});\r\n\r\nTracklist.propTypes = {\r\n  tracks: PropTypes.array,\r\n  fetchTracks: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tracklist);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../styles/ProgressSlider.css';\r\n\r\n\r\nclass TimeProgressSlider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      progress: 0,\r\n      captured: false\r\n    };\r\n\r\n    // this.handleClick = this.handleClick.bind(this);\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    this.clientRect = e.currentTarget.getBoundingClientRect();\r\n    const part = this.clientRect.width / 100;\r\n    let progress = (e.clientX - this.clientRect.left)  / part;\r\n    window.addEventListener('mousemove', this.handleMouseMove);\r\n    window.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n    this.props.onCaptured();\r\n    this.props.onTimeProgressChange(progress);\r\n    this.setState({ captured: true });\r\n  }\r\n\r\n  handleMouseUp(e) {\r\n    const part = this.clientRect.width / 100;\r\n    let progress = (e.clientX - this.clientRect.left)  / part;\r\n    window.removeEventListener('mousemove', this.handleMouseMove);\r\n    window.removeEventListener('mouseup', this.handleMouseUp);\r\n\r\n    this.props.onTimeChange(progress);\r\n    this.setState({ captured: false });\r\n  }\r\n\r\n  handleMouseMove(e) {\r\n    const part = this.clientRect.width / 100;\r\n    let progress = (e.clientX - this.clientRect.left)  / part;\r\n\r\n    if (progress > 100) {\r\n      progress = 100;\r\n    } else if (progress < 0) {\r\n      progress = 0;\r\n    }\r\n\r\n    this.props.onTimeProgressChange(progress);\r\n  }\r\n\r\n  handleClick(e) {\r\n    const clientRect = e.currentTarget.getBoundingClientRect();\r\n\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { timeProgress } = this.props;\r\n    const fillerStyle = {\r\n      width: timeProgress+'%'\r\n    };\r\n\r\n    const handlerStyle = {\r\n      opacity: this.state.captured ? '1' : '',\r\n      left: timeProgress+'%'\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className='progress-slider'\r\n        onEnter={this.handleEnter}\r\n        onClick={this.handleClick}\r\n        onMouseDown={this.handleMouseDown}>\r\n        <div className='progress-slider_line'>\r\n          <div\r\n            className='progress-slider_filler' \r\n            style={fillerStyle}>\r\n          </div>\r\n          <div\r\n            style={handlerStyle}\r\n            className='progress-slider_handler'>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n});\r\n\r\nTimeProgressSlider.propTypes = {\r\n\r\n};\r\n\r\nexport default TimeProgressSlider;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getSelectedTrackSource, getSelectedTrackTitle } from '../reducers/';\r\n\r\nimport { playTrack,\r\n        stopTrack,\r\n        nextTrack,\r\n        prevTrack } from '../actions/';\r\n\r\nimport TimeProgressSlider from './TimeProgressSlider';\r\n\r\nimport '../styles/Player.css';\r\n\r\nclass Player extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      timeProgress: 0,\r\n      currentTime: '00:00',\r\n      duration: '00:00',\r\n    }\r\n\r\n    this.audioRef = React.createRef();\r\n\r\n    this.handleBtnPlayClick = this.handleBtnPlayClick.bind(this);\r\n    this.handleEnded = this.handleEnded.bind(this);\r\n    this.handleTimeUpdate = this.handleTimeUpdate.bind(this);\r\n    this.handleMetaData = this.handleMetaData.bind(this);\r\n    this.handleTimeChange = this.handleTimeChange.bind(this);\r\n    this.handleCapturedSlider = this.handleCapturedSlider.bind(this);\r\n    this.handleTimeProgressUpdate = this.handleTimeProgressUpdate.bind(this);\r\n    this.handleTimeProgressChange = this.handleTimeProgressChange.bind(this);\r\n  }\r\n\r\n  handleBtnPlayClick() {\r\n    if (this.props.paused) {\r\n      this.props.play();\r\n    } else {\r\n      this.props.pause();\r\n    }\r\n  }\r\n\r\n  handleEnded() {\r\n    this.props.next();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.paused) {\r\n      this.audioRef.current.pause();\r\n    } else {\r\n      this.audioRef.current.play();\r\n    }\r\n  }\r\n\r\n  handleTimeUpdate() {\r\n    const audio = this.audioRef.current;\r\n    let currentTime = Math.round(audio.currentTime);\r\n    let minutes = parseInt(currentTime / 60);\r\n    let seconds = currentTime % 60;\r\n\r\n    if (minutes < 10) {\r\n      minutes = `0${minutes}`;\r\n    }\r\n\r\n    if (seconds < 10) {\r\n      seconds = `0${seconds}`;\r\n    }\r\n\r\n    currentTime = `${minutes}:${seconds}`;\r\n\r\n    this.setState({ currentTime });\r\n  }\r\n\r\n  handleMetaData() {\r\n    const audio = this.audioRef.current;\r\n    let duration = Math.round(audio.duration);\r\n    let minutes = parseInt(duration / 60);\r\n    let seconds = duration % 60;\r\n\r\n    if (minutes < 10) {\r\n      minutes = `0${minutes}`;\r\n    }\r\n\r\n    if (seconds < 10) {\r\n      seconds = `0${seconds}`;\r\n    }\r\n\r\n    duration = `${minutes}:${seconds}`;\r\n\r\n    this.setState({ duration });\r\n  }\r\n\r\n  handleTimeChange(time) {\r\n    const audio = this.audioRef.current;\r\n    audio.currentTime = (audio.duration / 100) * time;\r\n    audio.addEventListener('timeupdate', this.handleTimeProgressUpdate);\r\n  }\r\n\r\n  handleCapturedSlider() {\r\n    const audio = this.audioRef.current;\r\n    audio.removeEventListener('timeupdate', this.handleTimeProgressUpdate);\r\n  }\r\n\r\n  handleTimeProgressUpdate(e) {\r\n    this.handleTimeProgressChange();\r\n  }\r\n\r\n  handleTimeProgressChange(timeProgress) {\r\n    const audio = this.audioRef.current;\r\n    if (timeProgress == undefined) {\r\n      const part = audio.duration / 100;\r\n      const currentProgress = audio.currentTime / part ;    \r\n      this.setState({ timeProgress: currentProgress });\r\n    } else {\r\n      this.setState({ timeProgress });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const audio = this.audioRef.current;\r\n\r\n    audio.addEventListener('timeupdate', this.handleTimeProgressUpdate);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { paused, next, prev, name } = this.props;\r\n    const { duration, currentTime } = this.state;\r\n    return (\r\n      <div className='player'>\r\n        <audio\r\n          onEnded={this.handleEnded}\r\n          ref={this.audioRef}\r\n          src={this.props.src}\r\n          onLoadedMetadata={this.handleMetaData}\r\n          onTimeUpdate={this.handleTimeUpdate} />\r\n        <div className='control-btn-wrapper'>\r\n          <button className='control-btn' onClick={prev}>\r\n            <div className='player-prev-icon'>\r\n            </div>\r\n          </button>  \r\n          <button className='control-btn' onClick={this.handleBtnPlayClick}>\r\n            <div className={`player-${paused ? 'play' : 'pause'}-icon`}>   \r\n            </div>   \r\n          </button>  \r\n          <button className='control-btn' onClick={next}>\r\n            <div className='player-next-icon'>\r\n            </div>\r\n          </button>     \r\n        </div>\r\n        <div className='track-info-wrapper'>\r\n          <div style={{ textOverflow: 'ellipsis'}} title={name} className='track-info-name'>\r\n            {name}\r\n          </div>\r\n          <div className='track-info-duration'>\r\n            {currentTime} / {duration}\r\n          </div>\r\n        </div>\r\n            <TimeProgressSlider\r\n              onCaptured={this.handleCapturedSlider}\r\n              onTimeProgressChange={this.handleTimeProgressChange}\r\n              timeProgress={this.state.timeProgress}\r\n              onTimeChange={this.handleTimeChange} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  src: getSelectedTrackSource(state.tracks, state.player.track),\r\n  name: getSelectedTrackTitle(state.tracks, state.player.track),\r\n  paused: state.player.paused\r\n});\r\n\r\nconst mapStateToDispatch = dispatch => ({\r\n  play() {\r\n    dispatch(playTrack());\r\n  },\r\n  pause() {\r\n    dispatch(stopTrack());\r\n  },\r\n  next() {\r\n    dispatch(nextTrack());\r\n  },\r\n  prev() {\r\n    dispatch(prevTrack());\r\n  }\r\n});\r\n\r\nPlayer.propTypes = {\r\n  src: PropTypes.string,\r\n  name: PropTypes.string,\r\n  paused: PropTypes.bool.isRequired,\r\n  play: PropTypes.func.isRequired,\r\n  pause: PropTypes.func.isRequired,\r\n  next: PropTypes.func.isRequired,\r\n  prev: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapStateToDispatch)(Player);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { findTracksByName } from '../actions/';\r\n\r\nimport '../styles/Search.css';\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: ''\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleChange({ target }) {\r\n    this.setState({ value: target.value });\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.searchFor(this.state.value);\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <div className='search'>\r\n        <input className='search-input' onChange={this.handleChange} value={value} />\r\n        <button className='search-btn' onClick={this.handleClick}>\r\n          Search\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToDispatch = dispatch => ({\r\n  searchFor(value) {\r\n    dispatch(findTracksByName(value))\r\n  }\r\n});\r\n\r\nSearch.propTypes = {\r\n  searchFor: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null,mapStateToDispatch)(Search);","import React, { Component } from 'react';\r\n\r\nimport Tracklist from './components/Tracklist';\r\nimport Player from './components/Player';\r\nimport Search from './components/Search';\r\n\r\nconst AppStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  marginTop: '30px',\r\n};\r\n\r\nconst titleStyle = {\r\n  textAlign: 'center',\r\n  color: '#90bfb3'\r\n};\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div style={AppStyle}>\r\n        <div style={{ width: '250px' }}>\r\n          <h2 style={titleStyle}>\r\n            Find Your Music!\r\n          </h2>\r\n          <Search />\r\n          <Tracklist />\r\n          <Player />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}