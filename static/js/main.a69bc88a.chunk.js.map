{"version":3,"sources":["reducers/index.js","actions/types.js","store/index.js","actions/index.js","components/Track.js","components/Tracklist.js","components/Player.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["tracks","combineReducers","byID","state","arguments","length","undefined","action","type","Object","objectSpread","forEach","track","id","allIDs","concat","toConsumableArray","map","player","selected","paused","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","apiRoot","receiveTracks","trackStyle","display","justifyContent","borderBottom","Track","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","_this$props","selectTrack","playTrack","stopTrack","_this$props2","react_default","a","createElement","style","name","onClick","Component","isPaused","connect","_ref","dispatch","_ref2","Promise","resolve","Tracklist","fetchTracks","components_Track","key","queryParams","url","fetch","then","response","json","data","results","Player","audioRef","React","createRef","current","pause","play","ref","src","audio","searchStyle","marginBottom","inputStyle","flex","Search","value","handleChange","target","setState","searchFor","onChange","fetchTracksByName","AppStyle","marginTop","titleStyle","textAlign","App","components_Search","components_Tracklist","components_Player","Boolean","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oOA8CMA,EAASC,YAAgB,CAC7BC,KA/BW,WAAwB,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnC,OAAQC,EAAOC,MACb,ICjB0B,iBDkBxB,IAAMR,EAAMS,OAAAC,EAAA,EAAAD,CAAA,GACPN,GAIL,OADAI,EAAOP,OAAOW,QAAQ,SAAAC,GAAK,OAAIZ,EAAOY,EAAMC,IAAMD,IAC3CZ,EACT,ICvByB,gBDwBvB,MAAO,GACT,QACE,OAAOG,IAoBXW,OAhBa,WAAwB,IAAvBX,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrC,OAAQC,EAAOC,MACb,ICjC0B,iBDkCxB,SAAAO,OAAAN,OAAAO,EAAA,EAAAP,CACKN,GADLM,OAAAO,EAAA,EAAAP,CAEKF,EAAOP,OAAOiB,IAAI,SAAAL,GAAK,OAAIA,EAAMC,OAExC,ICrCyB,gBDsCvB,MAAO,GACT,QACE,OAAOV,MAyBPe,EAASjB,YAAgB,CAC7BkB,SAjBe,WAAwB,IAAvBhB,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvC,MChD0B,iBDgDtBC,EAAOC,KACFD,EAAOM,GAETV,GAcPiB,OAXa,WAA0B,IAAzBjB,IAAyBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAAXG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvC,MCtD0B,iBDsDtBC,EAAOC,MCrDc,gBDuDdD,EAAOC,MAGXL,KAgBMF,cAAgB,CAC7BD,SACAkB,WE7EIG,EAAmBC,OAAOC,sCAAwCC,IAKzDC,EAHDC,YAAYC,EACxBN,EAAiBO,YAAgBC,kDCL7BC,EAAU,gCAEHC,EAAgB,SAAA/B,GAAM,MAAK,CACtCQ,KFL4B,iBEM5BR,kBCDIgC,EAAa,CACjBC,QAAS,OACTC,eAAgB,gBAChBC,aAAc,mBAGVC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA7B,OAAA8B,EAAA,EAAA9B,CAAA+B,KAAAJ,IACjBE,EAAA7B,OAAAgC,EAAA,EAAAhC,CAAA+B,KAAA/B,OAAAiC,EAAA,EAAAjC,CAAA2B,GAAAO,KAAAH,KAAMH,KAEDO,YAAcN,EAAKM,YAAYC,KAAjBpC,OAAAqC,EAAA,EAAArC,QAAAqC,EAAA,EAAArC,CAAA6B,KAHFA,6EAML,IAAAS,EAC2DP,KAAKH,MAApEzB,EADImC,EACJnC,MAAOO,EADH4B,EACG5B,SAAU6B,EADbD,EACaC,YAAaC,EAD1BF,EAC0BE,UAAWC,EADrCH,EACqCG,UAAW9B,EADhD2B,EACgD3B,OAExDR,EAAMC,KAAOM,GACf6B,IACAC,KACS7B,EACT6B,IAEAC,qCAIK,IAAAC,EAC6BX,KAAKH,MAAjCzB,EADDuC,EACCvC,MAAiBQ,GADlB+B,EACQhC,SADRgC,EACkB/B,QAEzB,OACEgC,EAAAC,EAAAC,cAAA,OAAKC,MAAOvB,GACVoB,EAAAC,EAAAC,cAAA,WAAM1C,EAAM4C,MACZJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,QAASjB,KAAKI,aACnBxB,EAAS,OAAS,iBA5BXsC,aA2CdC,EAAW,SAACvC,EAAQD,EAAUN,GAClC,OAAIM,IAAaN,GACRO,GA2BIwC,cAnCS,SAACzD,EAAD0D,GAAA,IAAUhD,EAAVgD,EAAUhD,GAAV,MAAoB,CAC1CD,MAAOT,EAAMH,OAAOE,KAAKW,GACzBM,SAAUhB,EAAMe,OAAOC,SACvBC,OAASuC,EAASxD,EAAMe,OAAOE,OAAQjB,EAAMe,OAAOC,SAAUN,KAUrC,SAACiD,EAADC,GAAA,IAAalD,EAAbkD,EAAalD,GAAb,MAAuB,CAChDmC,YADgD,WAE9Cc,ED3CuB,SAAAjD,GAAE,MAAK,CAChCL,KFlB0B,eEmB1BK,MCyCWmC,CAAYnC,KAGvBoC,UALgD,WAM9C,OAAOa,ED1DoB,SAAAA,GAI7B,OAHAA,EAAS,CACTtD,KFNyB,gBEQlBwD,QAAQC,aCyDff,UATgD,WAU9CY,EDvD4B,CAC9BtD,KFb0B,oBG+EboD,CAA6CxB,GC5EtD8B,8LAGF1B,KAAKH,MAAM8B,+CAGJ,IACCnE,EAAWwC,KAAKH,MAAhBrC,OACR,OACEoD,EAAAC,EAAAC,cAAA,WACGtD,EAAOiB,IAAI,SAAAJ,GAAE,OAAIuC,EAAAC,EAAAC,cAACc,EAAD,CAAOC,IAAKxD,EAAIA,GAAIA,cAVtB6C,aAgCTE,cAfS,SAAAzD,GAAK,MAAK,CAChCH,OAAQG,EAAMH,OAAOc,SAGI,SAAAgD,GAAQ,MAAK,CACtCK,YADsC,WAEpCL,EFU6B,SAAAA,GAC/B,IAAMQ,EAAW,aAAAvD,OAxCF,WAwCE,oCACXwD,EAAG,GAAAxD,OAAMe,EAAN,YAAAf,OAAwBuD,GACjCE,MAAMD,GACHE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJd,EAAS/B,EAAc6C,EAAKC,iBEPnBjB,CAA6CM,GClCtDY,cACJ,SAAAA,EAAYzC,GAAO,IAAAC,EAAA,OAAA7B,OAAA8B,EAAA,EAAA9B,CAAA+B,KAAAsC,IACjBxC,EAAA7B,OAAAgC,EAAA,EAAAhC,CAAA+B,KAAA/B,OAAAiC,EAAA,EAAAjC,CAAAqE,GAAAnC,KAAAH,KAAMH,KAED0C,SAAWC,IAAMC,YAHL3C,oFAObE,KAAKH,MAAMjB,OACboB,KAAKuC,SAASG,QAAQC,QAEtB3C,KAAKuC,SAASG,QAAQE,wCAKxB,OACEhC,EAAAC,EAAAC,cAAA,SACE+B,IAAK7C,KAAKuC,SACVO,IAAK9C,KAAKH,MAAMiD,aAnBH5B,aAkCNE,cAVS,SAAAzD,GAAK,MAAK,CAChCmF,KNyCqCtF,EMzCTG,EAAMH,ONyCWmB,EMzCHhB,EAAMe,OAAOC,SN0CnDA,GAAYnB,EAAOE,KAAKiB,GACnBnB,EAAOE,KAAKiB,GAAUoE,MAEtB,IM5CTnE,OAAQjB,EAAMe,OAAOE,QNwCe,IAACpB,EAAQmB,GMhChCyC,CAAyBkB,GClClCU,EAAc,CAClBvD,QAAS,OACTC,eAAgB,gBAChBuD,aAAc,QAGVC,EAAa,CACjBC,KAAM,KAGFC,cACJ,SAAAA,EAAYvD,GAAO,IAAAC,EAAA,OAAA7B,OAAA8B,EAAA,EAAA9B,CAAA+B,KAAAoD,IACjBtD,EAAA7B,OAAAgC,EAAA,EAAAhC,CAAA+B,KAAA/B,OAAAiC,EAAA,EAAAjC,CAAAmF,GAAAjD,KAAAH,KAAMH,KAEDlC,MAAQ,CACX0F,MAAO,IAGTvD,EAAKwD,aAAexD,EAAKwD,aAAajD,KAAlBpC,OAAAqC,EAAA,EAAArC,QAAAqC,EAAA,EAAArC,CAAA6B,KACpBA,EAAKM,YAAcN,EAAKM,YAAYC,KAAjBpC,OAAAqC,EAAA,EAAArC,QAAAqC,EAAA,EAAArC,CAAA6B,KARFA,+EAWM,IAAVyD,EAAUlC,EAAVkC,OACbvD,KAAKwD,SAAS,CAAEH,MAAOE,EAAOF,8CAI9BrD,KAAKH,MAAM4D,UAAUzD,KAAKrC,MAAM0F,wCAGzB,IACCA,EAAUrD,KAAKrC,MAAf0F,MACR,OACEzC,EAAAC,EAAAC,cAAA,OAAKC,MAAOiC,GACVpC,EAAAC,EAAAC,cAAA,SAAOC,MAAOmC,EAAYQ,SAAU1D,KAAKsD,aAAcD,MAAOA,IAC9DzC,EAAAC,EAAAC,cAAA,UAAQG,QAASjB,KAAKI,aAAtB,kBAzBac,aA2CNE,cAAQ,KAVI,SAAAE,GAAQ,MAAK,CACtCmC,UADsC,SAC5BJ,GACR/B,EJrB6B,SAAC+B,GAAD,OAAW,SAAA/B,GAC1C,IAAMQ,EAAW,aAAAvD,OA7BF,WA6BE,yBAAAA,OAAgD8E,GAC3DtB,EAAG,GAAAxD,OAAMe,EAAN,YAAAf,OAAwBuD,GACjCE,MAAMD,GACHE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJd,EAV6B,CACjCtD,KFzB2B,kBEmCvBsD,EAAS/B,EAAc6C,EAAKC,aIcrBsB,CAAkBN,OAQhBjC,CAAiCgC,GCrD1CQ,EAAW,CACfnE,QAAS,OACTC,eAAgB,SAChBmE,UAAW,QAGPC,EAAa,CACjBC,UAAW,UAoBEC,mLAfX,OACEpD,EAAAC,EAAAC,cAAA,OAAKC,MAAO6C,GACVhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,MAAO+C,GAAX,oBAGAlD,EAAAC,EAAAC,cAACmD,EAAD,MACArD,EAAAC,EAAAC,cAACoD,EAAD,MACAtD,EAAAC,EAAAC,cAACqD,EAAD,eAVQjD,aCJEkD,QACW,cAA7BtF,OAAOuF,SAASC,UAEe,UAA7BxF,OAAOuF,SAASC,UAEhBxF,OAAOuF,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAUzF,MAAOA,GACf2B,EAAAC,EAAAC,cAAC6D,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/C,KAAK,SAAAgD,GACjCA,EAAaC","file":"static/js/main.a69bc88a.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nimport * as types from '../actions/types';\r\n\r\nconst initState = {\r\n  tracks: {\r\n    byID: {\r\n\r\n    },\r\n    allIDs: []\r\n  },\r\n  player: {\r\n    src: ''\r\n  }\r\n};\r\n\r\nconst byID = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.RECEIVE_TRACKS:\r\n      const tracks = {\r\n        ...state\r\n      }\r\n\r\n      action.tracks.forEach(track => tracks[track.id] = track);\r\n      return tracks;\r\n    case types.REMOVE_TRACKS:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst allIDs = (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.RECEIVE_TRACKS:\r\n      return [\r\n        ...state,\r\n        ...action.tracks.map(track => track.id)\r\n      ];\r\n    case types.REMOVE_TRACKS:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst tracks = combineReducers({\r\n  byID,\r\n  allIDs\r\n});\r\n\r\nconst selected = (state = '', action) => {\r\n  if (action.type === types.SELECT_TRACK) {\r\n    return action.id;\r\n  } \r\n  return state;\r\n};\r\n\r\nconst paused = (state = true, action) => {\r\n  if (action.type === types.SET_ON_PAUSE) {\r\n    return true;\r\n  } else if (action.type === types.SET_ON_PLAY) {\r\n    return false;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst player = combineReducers({\r\n  selected,\r\n  paused\r\n});\r\n\r\nexport const getSelectedTrackSource = (tracks, selected) => {\r\n  if (selected && tracks.byID[selected]) {\r\n    return tracks.byID[selected].audio\r\n  } else {\r\n    return '';\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  tracks,\r\n  player\r\n});","\r\nexport const RECEIVE_TRACKS = 'RECEIVE_TRACKS';\r\nexport const REMOVE_TRACKS = 'REMOVE_TRACKS';\r\n\r\nexport const SELECT_TRACK = 'SELECT_TRACK';\r\nexport const SET_ON_PAUSE = 'SET_ON_PAUSE';\r\nexport const SET_ON_PLAY = 'SET_ON_PLAY';\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from '../reducers/';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer,\r\n  composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;","import * as types from './types';\r\n\r\nconst clientID = 'e996f43b';\r\nconst apiRoot = 'https://api.jamendo.com/v3.0/';\r\n\r\nexport const receiveTracks = tracks => ({\r\n  type: types.RECEIVE_TRACKS,\r\n  tracks\r\n});\r\n\r\nexport const playTrack = () => dispatch => {\r\n  dispatch({\r\n  type: types.SET_ON_PLAY\r\n});\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const stopTrack = () => ({\r\n  type: types.SET_ON_PAUSE\r\n});\r\n\r\nexport const selectTrack = id => ({\r\n  type: types.SELECT_TRACK,\r\n  id\r\n});\r\n\r\nexport const removeTracks = () => ({\r\n  type: types.REMOVE_TRACKS\r\n});\r\n\r\nexport const fetchTracksByName = (value) => dispatch => {\r\n  const queryParams = `client_id=${clientID}&limit=10&namesearch=${value}`;\r\n  const url = `${apiRoot}tracks/?${queryParams}`;\r\n  fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      dispatch(removeTracks());\r\n      dispatch(receiveTracks(data.results));\r\n  });\r\n}\r\n\r\nexport const fetchTracks = () => dispatch => {\r\n  const queryParams = `client_id=${clientID}&limit=10&order=popularity_total`;\r\n  const url = `${apiRoot}tracks/?${queryParams}`\r\n  fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      dispatch(receiveTracks(data.results));\r\n  });\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { selectTrack, stopTrack, playTrack } from '../actions/';\r\n\r\nconst trackStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  borderBottom: '1px solid black'\r\n};\r\n\r\nclass Track extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    const { track, selected, selectTrack, playTrack, stopTrack, paused } = this.props;\r\n\r\n    if (track.id !== selected) {\r\n      selectTrack();\r\n      playTrack();\r\n    } else if (paused) {\r\n      playTrack();\r\n    } else {\r\n      stopTrack();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { track, selected, paused } = this.props;\r\n\r\n    return (\r\n      <div style={trackStyle}>  \r\n        <div>{track.name}</div>\r\n        <div>\r\n          <button onClick={this.handleClick}>\r\n            {paused ? 'play' : 'stop'}\r\n          </button>          \r\n        </div>\r\n      </div>  \r\n    )\r\n  }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state, { id }) => ({\r\n  track: state.tracks.byID[id],\r\n  selected: state.player.selected,\r\n  paused:  isPaused(state.player.paused, state.player.selected, id)\r\n});\r\n\r\nconst isPaused = (paused ,selected, id) => {\r\n  if (selected === id) {\r\n    return paused;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst mapStateToDispatch = (dispatch, { id }) => ({\r\n  selectTrack() {\r\n    dispatch(selectTrack(id));\r\n  },\r\n\r\n  playTrack() {\r\n    return dispatch(playTrack());\r\n  },\r\n\r\n  stopTrack() {\r\n    dispatch(stopTrack());\r\n  }\r\n});\r\n\r\nTrack.propTypes = {\r\n  track: PropTypes.object.isRequired,\r\n  selected: PropTypes.string,\r\n  paused: PropTypes.bool.isRequired,\r\n  selectTrack: PropTypes.func.isRequired,\r\n  playTrack: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapStateToDispatch)(Track);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { fetchTracks } from '../actions/';\r\n\r\nimport Track from './Track';\r\n\r\nclass Tracklist extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchTracks();\r\n  }\r\n\r\n  render() {\r\n    const { tracks } = this.props;\r\n    return (\r\n      <div>  \r\n        {tracks.map(id => <Track key={id} id={id}/>)}\r\n      </div>  \r\n    )\r\n  }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  tracks: state.tracks.allIDs,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchTracks() {\r\n    dispatch(fetchTracks());\r\n  }\r\n});\r\n\r\nTracklist.propTypes = {\r\n  tracks: PropTypes.array,\r\n  fetchTracks: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tracklist);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getSelectedTrackSource } from '../reducers/'\r\n\r\nclass Player extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.audioRef = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.paused) {\r\n      this.audioRef.current.pause();\r\n    } else {\r\n      this.audioRef.current.play();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <audio\r\n        ref={this.audioRef}\r\n        src={this.props.src} />\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  src: getSelectedTrackSource(state.tracks, state.player.selected),\r\n  paused: state.player.paused\r\n});\r\n\r\nPlayer.propTypes = {\r\n  src: PropTypes.string,\r\n  paused: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps)(Player);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { fetchTracksByName } from '../actions/';\r\n\r\nconst searchStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  marginBottom: '20px'\r\n};\r\n\r\nconst inputStyle = {\r\n  flex: '1'\r\n};\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: ''\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleChange({ target }) {\r\n    this.setState({ value: target.value });\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.searchFor(this.state.value);\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <div style={searchStyle}>\r\n        <input style={inputStyle} onChange={this.handleChange} value={value} />\r\n        <button onClick={this.handleClick}>\r\n          Search\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToDispatch = dispatch => ({\r\n  searchFor(value) {\r\n    dispatch(fetchTracksByName(value))\r\n  }\r\n});\r\n\r\nSearch.propTypes = {\r\n  searchFor: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null,mapStateToDispatch)(Search);","import React, { Component } from 'react';\n\nimport Tracklist from './components/Tracklist';\nimport Player from './components/Player';\nimport Search from './components/Search';\n\nconst AppStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: '30px',\n};\n\nconst titleStyle = {\n  textAlign: 'center'\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <div style={AppStyle}>\n        <div>\n          <h2 style={titleStyle}>\n            Find Your Music!\n          </h2>\n          <Search />\n          <Tracklist />\n          <Player />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}